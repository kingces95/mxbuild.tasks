<?xml version="1.0" encoding="utf-8" ?>
<Project 
  ToolsVersion="4.0" 
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
>
  <Import Project="tasks.props" />

  <PropertyGroup>
    <ProjDir>$(MSBuildProjectDirectory)\</ProjDir>
    <DropDir>$(ProjDir)drop\</DropDir>
  </PropertyGroup>
  
  <Target Name="Log">
    <Message Text="ProjDir: $(ProjDir)"/>
    <Message Text="DropDir: $(DropDir)"/>
  </Target>
  
  <Target Name="Empty" DependsOnTargets="Log" />

  <ItemGroup>
    <Items0 Include="identity 0.0">
      <ElementA>elementA 0.0</ElementA>
      <ElementB>elementB 0.0</ElementB>
      <Cdata>cdata 0.0</Cdata>
      <attribute>attribute 0.0</attribute>
    </Items0>
    <Items0 Include="identity 0.1">
      <ElementA>elementA 0.1</ElementA>
      <ElementB>elementB 0.1</ElementB>
      <Cdata>cdata 0.1</Cdata>
      <attribute>attribute 0.1</attribute>
    </Items0>
    <Items1 Include="identity 1.0">
      <ElementA>elementA 1.0</ElementA>
      <ElementB>elementB 1.0</ElementB>
      <Cdata>cdata 1.0</Cdata>
      <attribute>attribute 1.0</attribute>
    </Items1>
    <Items1 Include="identity 1.1">
      <ElementA>elementA 1.1</ElementA>
      <ElementB>elementB 1.1</ElementB>
      <Cdata>cdata 1.1</Cdata>
      <attribute>attribute 1.1</attribute>
    </Items1>
  </ItemGroup>

  <Target Name="DiffFiles" DependsOnTargets="Log" >
    <Diff 
      SourceFiles="$(SourceFiles)" 
      TargetFiles="$(TargetFiles)"
      TargetFolder="$(TargetFolder)"
      IgnoreLastWriteTime="$(IgnoreLastWriteTime)"
    >
      <Output ItemName="DifferentSourceFiles" TaskParameter="DifferentSourceFiles" />
      <Output ItemName="DifferentTargetFiles" TaskParameter="DifferentTargetFiles" />
      <Output ItemName="SameSourceFiles" TaskParameter="SameSourceFiles" />
      <Output ItemName="SameTargetFiles" TaskParameter="SameTargetFiles" />
      <Output ItemName="SameTargetFiles" TaskParameter="SameTargetFiles" />
      <Output PropertyName="IsDifferent" TaskParameter="IsDifferent" />
    </Diff>

    <Message Text="DifferentSourceFiles: @(DifferentSourceFiles)" />
    <Message Text="DifferentTargetFiles: @(DifferentTargetFiles)" />
    <Message Text="SameSourceFiles: @(SameSourceFiles)" />
    <Message Text="SameTargetFiles: @(SameTargetFiles)" />
    <Message Text="IsDifferent: $(IsDifferent)" />
  </Target>

  <Target Name="GetAssemblyAttribute" DependsOnTargets="Log" >
    <GetAssemblyAttribute
      AssemblyPath="$(AssemblyPath)"
      AttributeName="$(AttributeName)"
    >
      <Output ItemName="Attribute" TaskParameter="Result" />
    </GetAssemblyAttribute>

    <DumpTaskItems
      Items="@(Attribute)"
      ExcludeDefaultMetadata="true"
      ExcludeEmptyValues="true"
    />
  </Target>

  <Target Name="ExpandTemplateLineByLine" DependsOnTargets="Log" >
    <PropertyGroup>
      <TemplateText>$([System.IO.File]::ReadAllText("template.txt"))</TemplateText>
    </PropertyGroup>

    <!--find variables of form: %(Name)-->
    <RegexMatches
      Input="$(TemplateText)"
      Pattern="(?&lt;=[%][(])\w*?(?=[.]\w*[)])"
    >
      <Output ItemName="Matches" TaskParameter="Matches" />
    </RegexMatches>
    <Message Text="Match: %(Matches.Identity)" />

    <ItemGroup>
      <Items Include="@(%(Matches.Identity))">
        <__Name>%(Identity)</__Name>
      </Items>
    </ItemGroup>
    <Message Text="Item: %(Items.__Name), Identity: %(Identity)" />

    <ExpandTemplate
      Input="$(TemplateText)"
      Type="lineByLine"
      Items="@(Items)"
    >
      <Output PropertyName="Expansion" TaskParameter="Result" />
    </ExpandTemplate>

    <Message Importance="high" Text="$(Expansion)"/>
  </Target>

  <Target Name="ExpandTemplateXml" DependsOnTargets="Log" >
    <PropertyGroup>
      <TemplateText>$([System.IO.File]::ReadAllText("template.xml"))</TemplateText>
    </PropertyGroup>

    <!--find variables of form: %(Name)-->
    <RegexMatches
      Input="$(TemplateText)"
      Pattern="(?&lt;=[%][(])\w*?(?=[.]\w*[)])"
    >
      <Output ItemName="Matches" TaskParameter="Matches" />
    </RegexMatches>
    <Message Text="Match: %(Matches.Identity)" />

    <ItemGroup>
      <Items Include="@(%(Matches.Identity))">
        <__Name>%(Identity)</__Name>
      </Items>
    </ItemGroup>
    <Message Text="Item: %(Items.__Name), Identity: %(Identity)" />
      
    <ExpandTemplate
      Input="$(TemplateText)"
      Type="xml"
      Items="@(Items)"
    >
      <Output PropertyName="Expansion" TaskParameter="Result" />
    </ExpandTemplate>

    <Message Importance="high" Text="$(Expansion)"/>
  </Target>
  
</Project>
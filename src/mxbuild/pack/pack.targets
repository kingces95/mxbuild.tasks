<?xml version="1.0" encoding="utf-8"?>
<Project 
  ToolsVersion="4.0"
  DefaultTargets="Build" 
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
>
  <Import Project="$(MxbuildDir)empty.targets" />

  <PropertyGroup>
    <!--<BuildDependsOn>
      _UnpackBuild;
      $(BuildDependsOn)
    </BuildDependsOn>-->
    <BuildDependsOn>
      _PackCreate;
      $(BuildDependsOn)
    </BuildDependsOn>
  </PropertyGroup>

  <!--_UnpackBuild-->
  <Target
    Name="_UnpackBuild"
    DependsOnTargets="_UnpackStage" 
    Condition="'$(SkipPackageCheck)'!='true'"
  >
    <MSBuild
      Projects="$(ProjFile)"
      Targets="MakeLogDir"
      Properties="BuildName=Unpack;BuildTarget=Build;BuildLogDir=$(UnpackLogDir)"
    >
      <Output ItemName="UnpackBuildLogs" TaskParameter="TargetOutputs" />
    </MSBuild>

    <PropertyGroup>
      <_LogFileType>build.unpack</_LogFileType>

      <_CommandLine>$(MSBuildExe) $(UnpackBuildDir)NugetUpdate.sln</_CommandLine>
      <_CommandLine>$(_CommandLine) /t:Build</_CommandLine>
      <_CommandLine>$(_CommandLine) /p:Platform=AnyCPU</_CommandLine>
      <_CommandLine>$(_CommandLine) /p:Configuration=$(Configuration)</_CommandLine>
      <_CommandLine>$(_CommandLine) /m</_CommandLine>
      <_CommandLine>$(_CommandLine) $(Properties)</_CommandLine>
      <_CommandLine>$(_CommandLine) @(UnpackBuildLogs, ' ')</_CommandLine>
    </PropertyGroup>

    <Exec Command="$(_CommandLine)" WorkingDirectory="$(UnpackAfterDir)" />
  </Target>

  <!--_UnpackStage-->
  <Target
    Name="_UnpackStage"
    DependsOnTargets="_UnpackUpdate"
  >
    <ItemGroup>
      <_SourceFiles Include="$(UnpackAfterDir)**\*" />
    </ItemGroup>

    <!--before-->
    <MakeDir Directories="$(UnpackBeforeDir)" />
    <Copy
      SourceFiles="@(_SourceFiles)"
      DestinationFolder="$(UnpackBuildDir)\%(RecursiveDir)"
      SkipUnchangedFiles="true"
    />

    <Message Importance="high" Text="$(MSBuildProjectName) -> $(UnpackAfterDir) => $(UnpackBuildDir)" />
  </Target>

  <!--_UnpackUpdate-->
  <Target
    Name="_UnpackUpdate"
    DependsOnTargets="_UnpackRestore" >

    <PropertyGroup>
      <_Command>$(NugetExe) update NugetUpdate.sln</_Command>
      <_Command>$(_Command) -id Xamarin.Forms.CarouselView</_Command>
      <_Command>$(_Command) -RepositoryPath packages</_Command>
      <_Command>$(_Command) -Source $(PackDir)</_Command>
      <_Command>$(_Command) -Source $(NugetFeed)</_Command>
      <_Command>$(_Command) -Verbosity detailed</_Command>
      <_Command>$(_Command) -Prerelease</_Command>

      <_Log>$(UnpackLogDir)update.log</_Log>
    </PropertyGroup>

    <WriteLinesToFile Lines="$(_Command)" File="$(_Log)" Overwrite="true" />
    <Exec
      Command="$(_Command) &gt;&gt; $(_Log)"
      WorkingDirectory="$(UnpackAfterDir) "
    />
    <Message Importance="$(PackVerbosity)" Text="nuget.exe update -&gt; $(_Log)" />
  </Target>

  <!--_UnpackRestore-->
  <Target
    Name="_UnpackRestore"
    DependsOnTargets="_UnpackCopy" >

    <PropertyGroup>
      <_Command>$(NugetExe) restore NugetUpdate.sln</_Command>
      <_Command>$(_Command) -Source $(PackDir)</_Command>
      <_Command>$(_Command) -Source $(NugetFeed)</_Command>
      <_Command>$(_Command) -Verbosity detailed</_Command>
      <_Command>$(_Command) -NoCache</_Command>

      <_Log>$(UnpackLogDir)restore.log</_Log>
    </PropertyGroup>
    
    <WriteLinesToFile Lines="$(_Command)" File="$(_Log)" Overwrite="true" />
    <Exec
      Command="$(_Command) &gt;&gt; $(_Log)"
      WorkingDirectory="$(UnpackAfterDir)"
    />
    <Message Importance="$(PackVerbosity)" Text="nuget.exe restore -&gt; $(_Log)" />
  </Target>

  <!--_UnpackCopy-->
  <Target
    Name="_UnpackCopy"
    DependsOnTargets="_PackCreate"
  >
    <ItemGroup>
      <UnpackSolutionFiles Include="$(ProjDir)Unpack\**\*" />
    </ItemGroup>

    <!--before-->
    <MakeDir Directories="$(UnpackBeforeDir)" />
    <Copy
      SourceFiles="@(UnpackSolutionFiles)"
      DestinationFolder="$(UnpackBeforeDir)\%(RecursiveDir)"
      SkipUnchangedFiles="true"
    />

    <!--after-->
    <MakeDir Directories="$(UnpackAfterDir)" />
    <Copy 
      SourceFiles="@(UnpackSolutionFiles)" 
      DestinationFolder="$(UnpackAfterDir)\%(RecursiveDir)"
      SkipUnchangedFiles="true" 
    />

    <Message Importance="high" Text="$(MSBuildProjectName) -> $(UnpackBeforeDir) => $(UnpackAfterDir)" />
  </Target>
  
  <!--_PackCreate-->
  <Target
    Name="_PackCreate"
    DependsOnTargets="
      _PackCreateNuspec;
      _PackCreateIfNecessary
    "
  >
    <Message Importance="high" Text="$(MSBuildProjectName) -> $(NugetPackagePath)" />
  </Target>

  <!--_PackCreateIfNecessary-->
  <Target
    Name="_PackCreateIfNecessary"
    Inputs="$(NuspecPath)"
    Outputs="$(NugetPackagePath)"
    DependsOnTargets="_PackCreateNuspec"
  >
    <MakeDir Directories="$(PackDir)" />

    <PropertyGroup>
      <_Command>$(NugetExe)</_Command>
      <_Command>$(_Command) pack $(NuspecPath)</_Command>
      <_Command>$(_Command) -OutputDirectory $(PackDir)</_Command>
    </PropertyGroup>
    <Exec Command="$(_Command) >NUL" />
  </Target>

  <Target 
    Name="_PackCreateNuspec"
    DependsOnTargets="_PackCreateNuspecIfNecessary"
  >
    <Message Importance="high" Text="$(MSBuildProjectName) -> $(NuspecPath)" />
  </Target>

  <!--_PackCreateNuspecIfNecessary-->
  <Target
    Name="_PackCreateNuspecIfNecessary"
    Inputs="@(TargetResult)"
    Outputs="$(NuspecPath)"
  >
    <Message Importance="$(PackVerbosity)" Text="MxbuildTaskDir: $(MxbuildTaskDir)" />
    <Message Importance="$(PackVerbosity)" Text="NuspecVersion: $(NuspecVersion)" />
    <Message Importance="$(PackVerbosity)" Text="OutputPath: $(NuspecPath)" />
    <Message Importance="$(PackVerbosity)" Text="NuspecReferences:" />
    <Message Importance="$(PackVerbosity)" Text="  %(TargetResult.Identity)" />

    <CreateNuspec
      Id="$(NuspecId)"
      Owners="$(NuspecOwners)"
      Version="$(NuspecVersion)"
      Authors="$(NuspecAuthors)"
      Tags="$(NuspecTags)"
      LicenseUrl="$(NuspecLicenseUrl)"
      IconUrl="$(NuspecIconUrl)"
      ProjectUrl="$(NuspecProjectUrl)"
      RequireLicenseAcceptance="$(NuspecRequireLicenseAcceptance)"
      Description="$(NuspecDescription)"
      Copyright="$(NuspecCopyright)"
      ReleaseNotes="$(NuspecReleaseNotes)"
      
      References="@(TargetResult)"
      Dependencies="@(NuspecDependency)"
      
      OutputPath="$(NuspecPath)"
    />
  </Target>

</Project>